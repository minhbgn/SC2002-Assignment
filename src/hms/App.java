/*
 * This source file was generated by the Gradle 'init' task
 */
package hms;

import hms.manager.AppointmentManager;
import hms.manager.InventoryManager;
import hms.manager.ManagerContext;
import hms.manager.PrescriptionManager;
import hms.manager.UserManager;
import hms.system.ISystem;
import hms.system.LoginSystem;

public class App {
    private static final String PATIENT_REPO_FILEPATH = "data/patients.csv";
    private static final String DOCTOR_REPO_FILEPATH = "data/doctors.csv";
    private static final String PHARMACIST_REPO_FILEPATH = "data/pharmacists.csv";
    private static final String ADMIN_REPO_FILEPATH = "data/admins.csv";
    private static final String APPOINTMENT_REPO_FILEPATH = "data/appointments.csv";
    private static final String PRESCRIPTION_REPO_FILEPATH = "data/prescriptions.csv";
    private static final String INVENTORY_REPO_FILEPATH = "data/inventory.csv";

    private boolean isInitialized = false;
    private ISystem currentSystem = null;

    public void initialize() {
        if (isInitialized) return;

        ManagerContext ctx = new ManagerContext();

        ctx.addManager(UserManager.class,
            new UserManager(ctx,
                PATIENT_REPO_FILEPATH, 
                DOCTOR_REPO_FILEPATH, 
                PHARMACIST_REPO_FILEPATH, 
                ADMIN_REPO_FILEPATH
            )
        );

        ctx.addManager(AppointmentManager.class,
            new AppointmentManager(ctx, APPOINTMENT_REPO_FILEPATH)
        );

        ctx.addManager(PrescriptionManager.class, 
            new PrescriptionManager(ctx, PRESCRIPTION_REPO_FILEPATH)
        );

        ctx.addManager(InventoryManager.class, 
            new InventoryManager(ctx, INVENTORY_REPO_FILEPATH)
        );

        currentSystem = new LoginSystem(ctx);

        isInitialized = true;
    }

    public void run() {
        if (!isInitialized){
            throw new IllegalStateException("HMS not initialized");
        }

        while (currentSystem != null) {
            currentSystem = currentSystem.run();            
        }
    }
}
